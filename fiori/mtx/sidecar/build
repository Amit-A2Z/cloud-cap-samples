#!/usr/bin/env node
(async ()=>{
  const cds = require ('@sap/cds/lib'), {fs,path,write,exists} = cds.utils
  const main = path.resolve (__dirname,'../..')
  const tasks = []

  cds.root = main

  let csn = await cds.load('*')
  Object.defineProperty(csn,'$sources',{ value:csn.$sources, enumerable:true }) //> dirty hack for i18n
  let json = cds.compile.to.json (csn)
      tasks.push (write(json).to(__dirname,'gen/srv/csn.json'))

  try {
    for (let each of await fs.promises.readdir(path.resolve(main,'fts'))) {
      let csn = await cds.load(path.resolve(main,'fts',each),'parsed')
      csn.requires = [ '../../srv/csn.json' ]
      let json = cds.compile.to.json (csn)
      tasks.push (write(json).to(__dirname,'gen/fts',each,'csn.json'))
    }
  } catch {}

  const exec = require('util').promisify (require('child_process').exec)
  const resources_tar = path.resolve(__dirname,'gen/resources.tar')
  const resources = [ 'db/data', 'db/src', 'app/_i18n' ] .filter (exists)
  tasks.push (exec(`tar czvf ${resources_tar} ${resources.join(' ')}`,{ cwd:main }))

  await Promise.all(tasks)

})().catch (console.error)
